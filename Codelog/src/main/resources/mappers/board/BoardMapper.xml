
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.spring.codelog.board.mapper.IBoardMapper">
 <resultMap type="com.spring.codelog.board.model.BoardVO" id="BoardMap">
    <id property="boardId" column="board_id" />
   <result property="userId" column="user_id" />
   <result property="writer" column="writer" />
   <result property="tags" column="tags" />
   <result property="content" column="content" />
   <result property="preview" column="preview" />
   <result property="thumbnail" column="thumbnail" />
   <result property="viewAll" column="view_all" />
   <result property="imgPath" column="img_path" />
   <result property="regDate" column="reg_date" />
   <result property="bno" column="bno" />
   <result property="viewcnt" column="viewcnt" />
 </resultMap> 
 <select id="getContent" ></select>
 
 <!-- 01. 게시글 전체 목록 조회 및 검색조회까지-->
    <select id="listAll" resultType="com.spring.codelog.board.model.BoardVO">
            SELECT ROWNUM, bno, title, content, b.reg_date, viewcnt, user_name AS userName, 
                    <!-- ** 댓글숫자표시 -->
                    (SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt
            FROM tbl_board b, tbl_member m
            <include refid="search"></include>
            ORDER BY bno DESC, b.reg_date DESC 
    </select>
    
        <!-- sql code 조각 -->
    <!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
    <!-- 검색 조건 sql -->
    <sql id="search">
        <choose>
            <!-- 검색옵션이 전체 검색일 경우 -->
            <when test="searchOption == 'all'">
                WHERE b.writer = m.user_id
                AND    
                (user_name like '%'||#{keyword}||'%'
                OR content like '%'||#{keyword}||'%'
                OR title like '%'||#{keyword}||'%')
            </when>
            <!-- 전체 검색이 아닐 경우 -->
            <otherwise>
                WHERE b.writer = m.user_id 
                AND ${searchOption} like '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>
    
    <!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
          bno, 
          title, 
          content, 
          writer
        ) VALUES (
          (SELECT NVL(MAX(bno)+1, 1)FROM tbl_board),
          #{title},
          #{content},
          #{writer}
        )
    </insert>
    <insert id="write"> INSERT INTO proj_board(board_id, user_id, title, writer, tags, content, img_path, reg_date,preview, thumbnail, view_all) 
VALUES(board_seq.NEXTVAL, #{userId}, #{title}, #{writer}, #{tags}, #{content}, 'dd',to_date(sysdate, 'yyyy.mm.dd hh24:mi:ss'),#{preview}, #{thumbnail}, #{viewAll} )</insert>

    <!--03. 게시글 상세보기 조회 -->
    <select id="view" resultType="com.spring.codelog.board.model.BoardVO">
        SELECT * FROM tbl_board 
        WHERE bno = #{bno}
    </select>
    <!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE bno = #{bno}
    </update>
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
 
 </mapper>

